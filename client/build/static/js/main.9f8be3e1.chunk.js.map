{"version":3,"sources":["pages/CreateTodo/CreateTodo.js","components/FormButton/FormButton.js","pages/EditTodo/EditTodo.js","components/Todo/Todo.js","pages/TodoList/TodoList.js","pages/NotFound/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["CreateTodo","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChangeHandler","bind","assertThisInitialized","onSubmitHandler","state","todo_description","todo_responsible","todo_priority","todo_completed","redirect","e","setState","defineProperty","target","id","value","_this2","preventDefault","newTodo","axios","post","then","res","console","log","data","_this3","react_default","a","createElement","react_router","to","index_es","container","justify","item","sm","style","marginTop","color","variant","aria-label","component","Link","KeyboardArrowLeft_default","gutterBottom","onSubmit","spacing","xs","name","label","fullWidth","onChange","control","checked","type","Component","withStyles","theme","button","margin","unit","classes","className","onClick","buttonName","EditTodo","onCancelHandler","getCurrentTodoItem","get","concat","match","params","catch","err","updatedTodo","_this4","components_FormButton_FormButton","Todo","todo","onCheck","width","align","padding","_id","size","Edit_default","onDelete","Delete_default","TodoList","loadCurrentTodoList","todos","onDeleteClick","onCompletedClick","delete","filter","map","currentTodo","i","components_Todo_Todo","key","Add_default","md","todoListRow","marginBottom","Home_default","marginRight","src","App","height","react_router_dom","position","path","exact","NotFound","href","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9f8be3e1.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { Grid, Typography, TextField, FormControlLabel, Button, Radio, Fab } from '@material-ui/core';\nimport BackIcon from '@material-ui/icons/KeyboardArrowLeft';\nimport { Redirect } from 'react-router-dom';\n\n\nexport default class CreateTodo extends Component {\n\n    constructor(props){\n        super(props);\n        this.onChangeHandler = this.onChangeHandler.bind(this);\n        this.onSubmitHandler = this.onSubmitHandler.bind(this);\n\n        this.state = {\n            todo_description: '',\n            todo_responsible: '',\n            todo_priority: '',\n            todo_completed: false,\n            redirect: false\n        }\n    }\n\n    onChangeHandler(e) {\n        this.setState({\n            [e.target.id]: e.target.value\n        });\n        //console.log(e.target.id);\n        //console.log(e.target.value);\n    }\n\n    onSubmitHandler(e) {\n\n        e.preventDefault();\n        // console.log(`Form submitted!`);\n        // console.log(`Todo Description: ${this.state.todo_description}`);\n        // console.log(`Todo Responsible: ${this.state.todo_responsible}`);\n        // console.log(`Todo Priority: ${this.state.todo_priority}`);\n        \n        // Create a newTodo object based off the state (which is tied to the text inputs)\n        const newTodo = {\n            todo_description: this.state.todo_description,\n            todo_responsible: this.state.todo_responsible,\n            todo_priority: this.state.todo_priority,\n            todo_completed: this.state.todo_completed\n        }\n\n        // Post the newTodo object to the backend\n        axios.post('http://localhost:3001/api/todos', newTodo)\n            .then(res => {\n                console.log(res.data)\n                \n                // Clear state and Redirect to Home\n                this.setState({\n                    todo_description: '',\n                    todo_responsible: '',\n                    todo_priority: '',\n                    todo_completed: false,\n                    redirect:true\n                })\n            });\n\n    }\n\n    render() {\n\n        if (this.state.redirect)\n        return <Redirect to=\"/\" />\n\n\n        return (\n            <Grid container justify=\"center\">\n\n                <Grid item sm={8} style={{marginTop: 50}}>\n                    <Fab color='default' variant=\"extended\" aria-label=\"Back\" component={Link} to=\"/\">\n                        <BackIcon />\n                        Back\n                    </Fab>\n                </Grid>\n                \n                <Grid container justify=\"center\" style={{marginTop: 20}}>\n                    <Typography variant=\"h4\" gutterBottom>\n                        Create New Todo\n                    </Typography>\n                </Grid>\n\n                <Grid container justify=\"center\">\n                    <form onSubmit={this.onSubmitHandler}>\n                        <Grid container spacing={24}>\n                            <Grid item xs={12}>\n                                <TextField\n                                    id=\"todo_description\"\n                                    name=\"description\"\n                                    label=\"Description\"\n                                    fullWidth\n                                    value={this.state.todo_description}\n                                    onChange={this.onChangeHandler}\n                                />\n                            </Grid>\n\n                            <Grid item xs={12}>\n                                <TextField\n                                    id=\"todo_responsible\"\n                                    name=\"responsible\"\n                                    label=\"Responsible\"\n                                    fullWidth\n                                    value={this.state.todo_responsible}\n                                    onChange={this.onChangeHandler}\n                                />\n                            </Grid>\n\n                            <Grid item xs={12}>\n                                    <FormControlLabel\n                                        control={<Radio checked={this.state.todo_priority==='low'} onChange={(e)=>this.setState({todo_priority: \"low\"})}/>} \n                                        label=\"Low\" />\n                                    <FormControlLabel \n                                        control={<Radio checked={this.state.todo_priority==='medium'} onChange={(e)=>this.setState({todo_priority: \"medium\"})}/>} \n                                        label=\"Medium\" />\n                                    <FormControlLabel \n                                        control={<Radio checked={this.state.todo_priority==='high'} onChange={(e)=>this.setState({todo_priority: \"high\"})} />} \n                                        label=\"High\" />\n                            </Grid>\n\n                            <Grid item xs={12}>\n                                <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n                                    Submit\n                                </Button>\n                            </Grid>\n                        </Grid>\n                    </form>\n                </Grid>\n            </Grid>\n        )\n    }\n}","import React from 'react';\nimport { Button } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n    button: {\n        margin: theme.spacing.unit\n    }\n});\n\nconst FormButton = props => {\n    const { classes } = props;\n\n    return(\n        <Button \n            variant={props.variant}\n            type={props.type} \n            color={props.color} \n            className={classes.button}\n            onClick={props.onClick}\n        >\n            {props.buttonName}\n        </Button>\n    );\n}\n\nexport default withStyles(styles)(FormButton);","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Checkbox, Grid, Typography, FormControlLabel, TextField, Radio } from '@material-ui/core';\nimport { Redirect } from 'react-router-dom';\nimport FormButton from '../../components/FormButton';\n\nexport default class EditTodo extends Component {\n\n    constructor(props) {\n        super(props);\n        this.onChangeHandler = this.onChangeHandler.bind(this);\n        this.onSubmitHandler = this.onSubmitHandler.bind(this);\n        this.onCancelHandler = this.onCancelHandler.bind(this);\n\n        this.state = {\n            todo_description: '',\n            todo_responsible: '',\n            todo_priority: '',\n            todo_completed: false,\n            redirect: false\n        }\n    }\n\n    componentDidMount(){\n        this.getCurrentTodoItem();\n    }\n\n    getCurrentTodoItem() {\n        axios.get(`http://localhost:3001/api/todos/${this.props.match.params.id}`)\n            .then(res => {\n                this.setState({\n                    todo_description: res.data.todo_description,\n                    todo_responsible: res.data.todo_responsible,\n                    todo_priority: res.data.todo_priority,\n                    todo_completed: res.data.todo_completed,\n                    redirect: false\n                })\n            })\n            .catch(function (err){\n                console.log(err)\n            }); \n    }\n\n    onChangeHandler(e) {\n        this.setState({\n            [e.target.id]: e.target.value\n        });\n        //console.log(e.target.id);\n        //console.log(e.target.value);\n    }\n\n    onSubmitHandler(e) {\n\n        e.preventDefault();\n        // console.log(`Form submitted!`);\n        // console.log(`Todo Description: ${this.state.todo_description}`);\n        // console.log(`Todo Responsible: ${this.state.todo_responsible}`);\n        // console.log(`Todo Priority: ${this.state.todo_priority}`);\n        \n        // Create a newTodo object based off the state (which is tied to the text inputs)\n        const updatedTodo = {\n            todo_description: this.state.todo_description,\n            todo_responsible: this.state.todo_responsible,\n            todo_priority: this.state.todo_priority,\n            todo_completed: this.state.todo_completed\n        }\n\n        // Post the updated newTodo object to the backend\n        axios.post(`http://localhost:3001/api/todos/${this.props.match.params.id}`, updatedTodo)\n            .then(res => {\n                console.log(res.data);\n\n                // Set redirect to true so we can go back to main page\n                this.setState({redirect: true});\n            })\n\n        // Send the user back to main page - UPDATE: this did not update the UI in the main page\n        // this.props.history.push('/');\n    }\n\n    // Set redirect to true so user can redirect back to main page without saving any changes\n    onCancelHandler(e) {\n        this.setState({redirect: true});\n    }\n\n    render() {\n\n        if (this.state.redirect)\n        return <Redirect to=\"/\" />\n\n        return (\n            <Grid container justify=\"center\">\n                \n                <Grid container justify=\"center\" style={{marginTop: 20}}>\n                    <Typography variant=\"h4\" gutterBottom>\n                        Edit Todo\n                    </Typography>\n                </Grid>\n\n                <Grid container justify=\"center\">\n                    <form onSubmit={this.onSubmitHandler}>\n                        <Grid container spacing={24}>\n                            <Grid item xs={12}>\n                                <TextField\n                                    id=\"todo_description\"\n                                    name=\"description\"\n                                    label=\"Description\"\n                                    fullWidth\n                                    value={this.state.todo_description}\n                                    onChange={this.onChangeHandler}\n                                />\n                            </Grid>\n\n                            <Grid item xs={12}>\n                                <TextField\n                                    id=\"todo_responsible\"\n                                    name=\"responsible\"\n                                    label=\"Responsible\"\n                                    fullWidth\n                                    value={this.state.todo_responsible}\n                                    onChange={this.onChangeHandler}\n                                />\n                            </Grid>\n\n                            <Grid item xs={12}>\n                                    <FormControlLabel\n                                        control={<Radio checked={this.state.todo_priority==='low'} value='low' onChange={(e)=>this.setState({todo_priority: \"low\"})}/>} \n                                        label=\"Low\" />\n                                    <FormControlLabel \n                                        control={<Radio checked={this.state.todo_priority==='medium'} value='medium' onChange={(e)=>this.setState({todo_priority: \"medium\"})}/>} \n                                        label=\"Medium\" />\n                                    <FormControlLabel \n                                        control={<Radio checked={this.state.todo_priority==='high'} value='high' onChange={(e)=>this.setState({todo_priority: \"high\"})} />} \n                                        label=\"High\" />\n                            </Grid>\n\n                            <Grid item xs={12}>\n                                <FormControlLabel \n                                    control={<Checkbox checked={this.state.todo_completed} onChange={(e)=>this.setState({todo_completed: !(this.state.todo_completed)})} />}\n                                    label=\"Completed\"\n                                />\n                            </Grid>\n\n                            <Grid item xs={12}>\n                                {/* <FormControlLabel\n                                    control={<Button variant=\"contained\" color=\"primary\" type=\"submit\">\n                                    Update\n                                </Button>}\n                                /> */}\n\n                                {/* <FormControlLabel\n                                    control={<Button variant=\"contained\" color=\"default\" onClick={this.onCancelHandler}>\n                                    Cancel\n                                </Button>}\n                                /> */}\n\n                                <FormButton variant=\"contained\" color=\"primary\" buttonName=\"Update\" type=\"submit\" />\n                                <FormButton variant=\"contained\" color=\"default\" buttonName=\"Cancel\" onClick={this.onCancelHandler} />\n\n                            </Grid>\n                        </Grid>\n                    </form>\n                </Grid>\n            </Grid>\n        )\n    }\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { TableRow, TableCell, IconButton, FormControlLabel, Checkbox, Grid } from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nconst Todo = props => {\n    \n    //console.log(props.todo._id);\n\n    return(\n        <TableRow>\n            <TableCell>\n                <FormControlLabel \n                    control={<Checkbox checked={props.todo.todo_completed} onChange={(e)=>props.onCheck(props.todo)} />}\n                />\n            </TableCell>\n            <TableCell style={{ width: '120%' }} className={props.todo.todo_completed ? 'completed' : ''}>{props.todo.todo_description}</TableCell>\n            <TableCell className={props.todo.todo_completed ? 'completed' : ''}>{props.todo.todo_responsible}</TableCell>\n            <TableCell className={props.todo.todo_completed ? 'completed' : ''}>{props.todo.todo_priority}</TableCell>\n            <TableCell align='center' padding='none'>\n                <Grid container>\n                    <Grid item xs={6}>\n                        <IconButton component={Link} to={`/edit/${props.todo._id}`} size=\"small\" color=\"inherit\"><EditIcon /></IconButton>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <IconButton onClick={(e)=>props.onDelete(props.todo._id)} size=\"small\" color=\"secondary\"><DeleteIcon id={props.todo._id} /></IconButton>\n                    </Grid>\n                </Grid>   \n            </TableCell>\n        </TableRow>\n    );\n}\n\nexport default Todo;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { Grid, Paper, Table, TableHead, TableRow, TableCell, TableBody, Fab } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport Todo from '../../components/Todo';\n\n\n\nexport default class TodoList extends Component {\n\n    constructor(props) {\n        super(props);\n        this.onDeleteClick = this.onDeleteClick.bind(this);\n        this.onCompletedClick = this.onCompletedClick.bind(this);\n        this.state = {todos:[]};\n    }\n\n    componentDidMount() {\n        // NOTE TO SELF: having the loadCurrentTodoList() function defined inside componentDidMount() caused issues\n        // when reloading the page. Data would not load due to XHR 'Network Error'. Always better to have a separate\n        // function defined outside and then call it inside componentDidMount().\n        this.loadCurrentTodoList();\n    }\n\n    // Get all todos from backend\n    loadCurrentTodoList = () => {\n        axios.get('http://localhost:3001/api/todos')\n            .then(res => {\n                this.setState({todos: res.data});\n            })\n            .catch(function(err){\n                console.log(err);\n            })\n    }\n\n    // Remove Todo Item if Delete button is clicked in 'Todo' component\n    // Input 'id' received from child 'Todo' component\n    onDeleteClick(id) {\n        // console.log(id);\n        \n        axios.delete(`http://localhost:3001/api/todos/${id}`)\n            .then(res => {\n                this.setState({\n\n                    // Filter out the todo which has the 'id' we want to delete\n                    todos: this.state.todos.filter(todo => {\n                        return todo._id !== id\n                    })\n                });\n            })\n    }\n\n    // Function to update TodoItem's 'completed' state from TodoList table\n    // Input 'id' received from child 'Todo' component\n    onCompletedClick(todo) {\n        //console.log(todo);\n\n        const updatedTodo = {\n            todo_completed: !todo.todo_completed\n        }\n\n        axios.post(`http://localhost:3001/api/todos/${todo._id}`, updatedTodo)\n            .then(res => {\n                //console.log(res.data);\n\n                // Fetch the updated data and re-mount component\n                this.loadCurrentTodoList();\n            })\n    }\n    \n\n    todoListRow() {\n        // Map through todos array in state and create a Todo item\n        return this.state.todos.map((currentTodo, i) => {\n            return <Todo \n                        todo={currentTodo} \n                        key={i}\n                        onDelete={this.onDeleteClick}\n                        onCheck={this.onCompletedClick}\n                    />;\n        });\n    }\n\n    render() {\n        return (\n            <Grid container justify=\"center\">\n\n                <Grid item sm={8} style={{marginTop: 50}}>\n                    <Fab color='primary' variant=\"extended\" aria-label=\"Create New Todo\" component={Link} to=\"/create\">\n                        <AddIcon />\n                        New Todo\n                    </Fab>\n                </Grid>\n\n                <Grid sm={8} item style={{marginTop: 20}}>\n                    <Paper md={12}>\n                        <Table>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell>Completed</TableCell>\n                                    <TableCell>Description</TableCell>\n                                    <TableCell>Responsible</TableCell>\n                                    <TableCell>Priority</TableCell>\n                                    <TableCell>Actions</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                { this.todoListRow() }\n                            </TableBody>\n                        </Table>\n                    </Paper>\n                </Grid>\n\n            </Grid>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Grid, Fab } from '@material-ui/core';\nimport HomeIcon from '@material-ui/icons/Home';\nimport './NotFound.css';\n\n\nexport default class CreateTodo extends Component {\n\n    render() {\n\n\n        return (\n            <Grid container justify=\"center\">\n                \n                <Grid container justify=\"center\" style={{marginTop: 20, marginBottom:20 }} className=\"grid-img\">\n                    <Fab color='primary' variant=\"extended\" aria-label=\"Back\" component={Link} to=\"/\">\n                        <HomeIcon style={{marginRight:5}} />\n                         Return Home\n                    </Fab>\n                </Grid>\n\n                <img src=\"https://image.freepik.com/free-vector/funny-error-404-background-design_1167-219.jpg\"></img>\n            </Grid>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport CreateTodo from \"./pages/CreateTodo\";\nimport EditTodo from \"./pages/EditTodo\";\nimport TodoList from \"./pages/TodoList\";\nimport NotFound from \"./pages/NotFound\";\nimport { AppBar, Toolbar, Typography, Grid } from '@material-ui/core';\n\n\nclass App extends Component {\n\n  \n  render() {  \n    \n    return (\n      <Grid style={{height: '100%'}}>\n        <Router>\n          <div className=\"container\">\n            <AppBar position='static'>\n              <Toolbar>\n                <Typography variant=\"h5\" color=\"inherit\" component={Link} to=\"/\">\n                  My To-Do App\n                </Typography>\n              </Toolbar>\n            </AppBar>\n          </div>\n          <Switch>\n            <Route path=\"/\" exact component={TodoList} />\n            <Route path=\"/edit/:id\" component={EditTodo} />\n            <Route path=\"/create\" component={CreateTodo} />\n            <Route component={NotFound} />\n          </Switch>\n          <footer style={{marginTop: 100}}>\n            <Typography variant=\"h6\" align=\"center\" gutterBottom>\n              Built by Danish Akhtar using MERN stack and Material-UI\n            </Typography>\n            <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\n              To check out the source code, please click <a href=\"https://github.com/danishakh/myTodoList\">here</a>\n            </Typography>\n          </footer>\n      </Router>\n      </Grid>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}